<nav class="bg-gray-800">
    <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
      <div class="relative flex h-16 items-center justify-between">
        <div class="absolute inset-y-0 left-0 flex items-center sm:hidden">
          <!-- Mobile menu button-->
          <button type="button" class="relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
            <span class="absolute -inset-0.5"></span>
            <span class="sr-only">Open main menu</span>
            <!--
              Icon when menu is closed.
  
              Menu open: "hidden", Menu closed: "block"
            -->
            <svg class="block size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" data-slot="icon">
              <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
            </svg>
            <!--
              Icon when menu is open.
  
              Menu open: "block", Menu closed: "hidden"
            -->
            <svg class="hidden size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" data-slot="icon">
              <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        <div class="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
          <div class="flex shrink-0 items-center">
            <img class="h-8 w-auto" src="https://static.wixstatic.com/media/faf14c_c9e062ffb14c4135b0a2a5c14d9f5064%7Emv2.png/v1/fill/w_192%2Ch_192%2Clg_1%2Cusm_0.66_1.00_0.01/faf14c_c9e062ffb14c4135b0a2a5c14d9f5064%7Emv2.png" alt="Your Company">
          </div>
          <div class="hidden sm:ml-6 sm:block">
            <%
              const options = [
                {
                  display : 'User Accounts',
                  path : '/accounts'
                },
                {
                  display : 'Some other Option',
                  path : '/option2'
                },
                {
                  display : 'More',
                  path : '/option3'
                },
                {
                  display : 'home',
                  path : '/'
                },
              ]
            %>
            <div class="flex space-x-4">
              <% for (const option of options) {%>
                <a href="<%= option.path %>" class="rounded-md bg-gray-900 px-3 py-2 text-sm font-medium text-white" aria-current="page"><%= option.display %></a>
              <% } %>
            </div>
          </div>
        </div>
        <div class="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0">
  
          <!-- Profile dropdown -->
          <div class="relative ml-3">
            <div>
              <button type="button" class="relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                <span class="absolute -inset-1.5"></span>
                <span class="sr-only">Open user menu</span>
                <span class="text-lg font-medium text-white"> <%= session.user.name %></span>
              </button>

              <div class="absolute hidden right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black/5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                <a href="/auth/logout" class="block px-4 py-2 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-2">Sign out</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  
    <!-- Mobile menu, show/hide based on menu state. -->
    <div class="sm:hidden" id="mobile-menu">
      <div class="space-y-1 px-2 pb-3 pt-2">
        <!-- Current: "bg-gray-900 text-white", Default: "text-gray-300 hover:bg-gray-700 hover:text-white" -->
        <% for (const option of options) {%>
          <a href="<%= option.path %>" class="block rounded-md bg-gray-900 px-3 py-2 text-base font-medium text-white" aria-current="page"><%= option.display %></a>
        <% } %>
      </div>
    </div>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
    // get elements
    const mobileMenuButton = document.querySelector('[aria-controls="mobile-menu"]');
    const mobileMenu = document.getElementById('mobile-menu');
    const openIcon = mobileMenuButton.querySelector('svg.block');
    const closeIcon = mobileMenuButton.querySelector('svg.hidden');

    const userMenuButton = document.getElementById('user-menu-button');
    const userMenu = userMenuButton.nextElementSibling;


    // show/hide mobile menu
    const toggleMobileMenu = () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      // Cambiar el estado del botón
      mobileMenuButton.setAttribute('aria-expanded', !isExpanded);
      // Mostrar u ocultar el menú
      if (isExpanded) {
        mobileMenu.classList.add('hidden');
        openIcon.classList.remove('hidden');
        closeIcon.classList.add('hidden');
      } else {
        mobileMenu.classList.remove('hidden');
        openIcon.classList.add('hidden');
        closeIcon.classList.remove('hidden');
      }
    };
    // Event listener mobileMenuButton
    mobileMenuButton.addEventListener('click', toggleMobileMenu);


    // show/hide user menu
    const toggleUserMenu = () => {
      const isExpanded = userMenuButton.getAttribute('aria-expanded') === 'true';
      if (isExpanded){
        userMenuButton.setAttribute('aria-expanded', 'false');
        userMenu.classList.add('hidden');
      } else {
        userMenuButton.setAttribute('aria-expanded', 'true');
        userMenu.classList.remove('hidden');
      }
    }
  
    // Event listener userMenuButton
    userMenuButton.addEventListener('click', (event) => {
      event.stopPropagation();
      toggleUserMenu();
    });

  });
  </script>
  </nav>